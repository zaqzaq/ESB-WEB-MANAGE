<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	   default-autowire="byType" default-lazy-init="false">


	<context:component-scan base-package="com.zaq.esb.service.impl">
		<context:include-filter type="annotation"
     	 		expression="org.springframework.stereotype.Service" />
	</context:component-scan>

    <!--加载配置文件-->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!--jdbcTemplate-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="initialSize" value="1" />
	    <property name="minIdle" value="1" /> 
	    <property name="maxActive" value="${jdbc.maxActive}" />
		<property name="defaultAutoCommit" value="true"/>
		<property name="removeAbandoned" value="true" />  
		<!-- 超时时间；单位为秒。180秒=3分钟 -->  
		<property name="removeAbandonedTimeout" value="180" />  
		<!-- 关闭abanded连接时输出错误日志 -->  
		<property name="logAbandoned" value="true" />   
		<!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小    如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false -->
        <property name="poolPreparedStatements" value="false" />
        <!-- mysql  maxPoolPreparedStatementPerConnectionSize不用配置-->
<!--         <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
	</bean>
	
	<bean id="txManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
      
    <tx:annotation-driven transaction-manager="txManager" />   
	
	 <bean id="taskExecutor" 
	    class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"> 
	    <!-- 线程池维护线程的最少数量  -->
	    <property name="corePoolSize" value="20" /> 
	    <!-- 线程池维护线程所允许的空闲时间 -->
	    <property name="keepAliveSeconds" value="200" /> 
	    <!-- 线程池所使用的缓冲队列 -->
	    <property name="queueCapacity" value="50" />
	    <!-- 线程池维护线程的最大数量  -->	   
	    <property name="maxPoolSize" value="100" />   
	    <property name="waitForTasksToCompleteOnShutdown" value="true" /> 
	  </bean>
</beans>